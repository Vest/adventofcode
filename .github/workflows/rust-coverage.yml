name: Rust-coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-rust-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}

    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}

    - name: Run grcov
       env:
         PROJECT_NAME: "<your_project_name>"
         RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-chec  ks=off -Zno-landing-pads"
         CARGO_INCREMENTAL: 0
       run: |
         cargo build --verbose
         cargo test --verbose
         zip -0 cov.zip $(find . -name "$PROJECT_NAME*.gc*" -print)
         grcov cov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
